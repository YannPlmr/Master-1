http://umtice.univ-lemans.fr/course/view.php?id=1227
Clef:20IARK

Objectif:	Représenter les informations disponibles dans un formalisme adéquat
			Formaliser des raisonnements à partir de ces informations
			Approche symbolique

Trois questionnements sur l'IA:
	Compréhension des processus de raisonnement humain
	Possibilité de concevoir des machineayant un comportement intelligent
	Composante artistique de la "créature"

IA n'est pas que de l'informatique, ça regroupe, les maths, l'informatique, la mécanique mais aussi la littérature, la philo, la psycho ...

IA tourne autour de la cybernétique, les automates, les réseaux de neurones ...

1956: Première conférences réunissant Turing, Rosenblalt... où apparait pour la première fois le mot "Intelligence Artificielle"

	Approche "modèle"/Symbolique -> Programmation déclarative
	Approche combinatoire
	Approche numériques

Envisager des applications complexes réelles plutôt que d'étudier des petits problèmes abstraits et formalisés.

Deux type d'IA:
	IA Faible: machine qui font ce qu'on veut qu'elles fassent (on veut que ça marche)
	IA Forte: Comprehension et reproduction de l'humain à travers la machine (on veut que sa marche mais on cherche à comprendre comment ça marche)

Il existe différentes solution en IA 

IA 	= 

Réseau Sémantique 	= basé sur le sens des choses, développés comme des modèles descriptids de la dont le cerveau humain fait des associations entre les objets et les concepts.
					= Graphe orienté et étiqueté

Limites	: négation, cas particulier, rajouter certaines info, monotonie, cohérence.

Système interactif d'aide au diagnostique	: logiciel qui reproduit le comportement d'un expert humain accomplissant une tache intellectuelle dans un domaine précis.

	Ce système n'apportera jamais une réponse dont la logique n'a pas été prévu lors de sa mise en place.

Architecture générale:
	Base de règles: connaissance permanentes du domaine fournies par l'expert
	Base de faits: expertise donnée, données initiales à un problème
	Moteur d'inférence: mécanisme de raisonnement

Base de connaissance	= définie à partir du domaine ciblé, elle rassemble toutes le connaissances utilisées par un expert.


Problème état-opéreteur -> jeu de plateau
	état initial
	états finaux à atteindre
	Des opérateurs <condition, effet>

Graphe de résolution	= A partir d'un état initial, on applique tous les opérateursdont les conditions d'application sont vérifiées et on recommence sur les états obtenus.
Graphe de recherche		= La partie du Graphe de résolution explorée lors de la recherche est le Graphe de recherche.

La complexité est exprimé en fonction du facteur de branchement ( nb max de successeurs à un noeud), la profondeur du noeud, la longueur maximal du chemin.
	Complexité de temps
	Complexité d'espace

Pour un jeu de plateau, chaque noeud correspond à un état du plateau.

Fonction heuristique

Exemple: Voyage en Roumanie

											Arad
											|
									Tim		Sib 	Zer
									329		253		374
										  /	
										Fag		Rim		Ora		Arad
										178		193		380		366
										  \
								Sibiv	Bucharest
								253			0

Ce n'est pas optima, puisque ne considère par la distance parcourue.

Algorithme A*
	Définition d'une fonction f capable d'évaluer un noeud n et définie comme: f(n) = g(n) + h(n)

	Sur l'exemple du voyage en Roumanie, g(n) -> se qui à été parcouru
										 h(n) -> se qu'il reste à parcourir
												
												(g+h)
												Arad
												|
									Tim			Sib 		Zer
									118+329		140+253		75+374
										  				\
									Fag					Rim					Ora					Arad
									(140+66)+178		(140+80)+193		(140+151)+380		(140+140)+366
																	\										  
												Crai				Pit	  				Sibiv
												(220+146)+160		(220+97)+98			(220+80)+253
																		|
																	Bucharest

	A* est un système complet , optimal. La compléxité est exponentielle.
	Complexité en espace: garde tous les noeuds en mémoire.

5 étapes de réalisation de jeu:
	Représentation du jeu
	visualisation du jeu
	Modélisation des règles	
	Moteur de lancement de jeu JvJ, JvIA, IAvIA
	Améliorer le JiA


En Prolog on préfèrera manipuler des LISTE de LISTE pour plus de simpliciter.

Fonction d'évaluation:
	Min-Max
		limite du Min-Max: Effet d'horizon, on ne voit pas s'il y a un coup gagnant à la profondeur suivante.
	
	Alpha-Beta
								A
					Min Beta   <=5
							/		 \
					      B	             C
			   Max Alpha >=5			>=6
					/ 	  |     \       / | \
				  D	      E  	  F		6 7	1	
		Min Beta <=5	 <=4	 <=3
				/ | \	/ | \	/ | \	
				7 5 8 	6 4 8 	3 2 5

		
	

